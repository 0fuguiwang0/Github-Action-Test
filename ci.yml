name: Manual Deploy with Env Select

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select deployment environment'
        required: true
        type: choice
        options:
          - dev
          - uat
          - prod

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 源码
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: 安装 & 打包
        run: |
          npm ci
          npm run build

      - name: 登录镜像仓库
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 构建并推送镜像
        id: build_image
        run: |
          ENV=${{ github.event.inputs.environment }}
          IMAGE_BASE="${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_NAMESPACE }}/my-frontend"
          IMAGE_TAG="$IMAGE_BASE:$ENV"
          SHA_TAG="${{ github.sha }}"
          IMAGE_SHA="$IMAGE_BASE:$SHA_TAG"

          echo "Building Docker images: $IMAGE_SHA and $IMAGE_TAG"
          docker build -t "$IMAGE_SHA" -t "$IMAGE_TAG" .

          docker push "$IMAGE_SHA"
          docker push "$IMAGE_TAG"

          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: 部署
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            IMAGE=${{ steps.build_image.outputs.image_tag }}
            echo "Deploying Image: $IMAGE"
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} ${{ secrets.DOCKER_REGISTRY }}
            docker pull $IMAGE
            docker stop my-frontend || true
            docker rm my-frontend || true

            # 端口根据环境变
            if [ "${{ github.event.inputs.environment }}" = "dev" ]; then
              PORT=8083
            elif [ "${{ github.event.inputs.environment }}" = "uat" ]; then
              PORT=8082
            else
              PORT=8081
            fi

            docker run -d --name my-frontend -p $PORT:8081 $IMAGE
